--- vidshared.h	2012-06-04 23:01:54 +0900
+++ vidshared.h	2012-04-27 23:29:13 +0900
@@ -592,24 +655,79 @@
 {
    if (wctl & 0x2)
    {
+#ifndef GEKKO
       clip[0].xstart = Vdp2Regs->WPSX0 >> 1; // fix me
       clip[0].ystart = Vdp2Regs->WPSY0;
       clip[0].xend = Vdp2Regs->WPEX0 >> 1; // fix me
       clip[0].yend = Vdp2Regs->WPEY0;
+#else
+      clip[0].xstart = Vdp2Regs->WPSX0;
+      clip[0].ystart = Vdp2Regs->WPSY0 & 0x1FF;
+      clip[0].xend = Vdp2Regs->WPEX0;
+      clip[0].yend = Vdp2Regs->WPEY0 & 0x1FF;
+#endif
    }
 
    if (wctl & 0x8)
    {
+#ifndef GEKKO
       clip[1].xstart = Vdp2Regs->WPSX1 >> 1; // fix me
       clip[1].ystart = Vdp2Regs->WPSY1;
       clip[1].xend = Vdp2Regs->WPEX1 >> 1; // fix me
       clip[1].yend = Vdp2Regs->WPEY1;
+#else
+      clip[1].xstart = Vdp2Regs->WPSX1;
+      clip[1].ystart = Vdp2Regs->WPSY1 & 0x1FF;
+      clip[1].xend = Vdp2Regs->WPEX1;
+      clip[1].yend = Vdp2Regs->WPEY1 & 0x1FF;
+#endif
    }
 
+#if 0
    if (wctl & 0x20)
    {
       // fix me
    }
+#endif
+
+#ifdef GEKKO
+   switch ((Vdp2Regs->TVMD >> 1) & 0x3)
+   {
+      case 0: // Normal
+         clip[0].xstart = (clip[0].xstart & 0x3FF) >> 1;
+         clip[0].xend = (clip[0].xend & 0x3FF) >> 1;
+         clip[1].xstart = (clip[1].xstart & 0x3FF) >> 1;
+         clip[1].xend = (clip[1].xend & 0x3FF) >> 1;
+         break;
+      case 1: // Hi-Res
+         clip[0].xstart = clip[0].xstart & 0x3FF;
+         clip[0].xend= clip[0].xend & 0x3FF;
+         clip[1].xstart = clip[1].xstart & 0x3FF;
+         clip[1].xend= clip[1].xend & 0x3FF;
+         break;
+      case 2: // Exclusive Normal
+         clip[0].xstart = clip[0].xstart & 0x1FF;
+         clip[0].xend = clip[0].xend & 0x1FF;
+         clip[1].xstart = clip[1].xstart & 0x1FF;
+         clip[1].xend = clip[1].xend & 0x1FF;
+         break;
+      case 3: // Exclusive Hi-Res
+         clip[0].xstart = (clip[0].xstart & 0x1FF) << 1;
+         clip[0].xend = (clip[0].xend & 0x1FF) << 1;
+         clip[1].xstart = (clip[1].xstart & 0x1FF) << 1;
+         clip[1].xend = (clip[1].xend & 0x1FF) << 1;
+         break;
+   }
+
+   if ((vdp1h == 1)  && (resyratio == 0))
+   {
+      // Double-density interlace
+      clip[0].ystart >>= 1;
+      clip[0].yend >>= 1;
+      clip[1].ystart >>= 1;
+      clip[1].yend >>= 1;
+   }
+#endif
 }
 
 //////////////////////////////////////////////////////////////////////////////
@@ -634,23 +752,98 @@
 
 static INLINE void ReadLineWindowClip(int islinewindow, clipping_struct *clip, u32 *linewnd0addr, u32 *linewnd1addr)
 {
+#ifdef GEKKO
+   u8 TVMD = ((Vdp2Regs->TVMD >> 1) & 0x3);
+#endif
    if (islinewindow)
    {
       // Fetch new xstart and xend values from table
       if (islinewindow & 0x1)
       {
          // Window 0
+#ifndef GEKKO
          clip[0].xstart = (T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF) >> 1; // fix me
+#else
+   switch (TVMD)
+   {
+      case 0: // Normal
+         clip[0].xstart = ((T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF) >> 1) & 0x1FF;
+         break;
+      case 1: // Hi-Res
+         clip[0].xstart = (T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF);
+         break;
+      case 2: // Exclusive Normal
+         clip[0].xstart = (T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x1FF);
+         break;
+      case 3: // Exclusive Hi-Res
+         clip[0].xstart = ((T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF) >> 1);
+         break;
+   }
+#endif
          linewnd0addr[0]+=2;
+#ifndef GEKKO
          clip[0].xend = (T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF) >> 1; // fix me
+#else
+   switch (TVMD)
+   {
+      case 0: // Normal
+         clip[0].xend= ((T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF) >> 1) & 0x1FF;
+         break;
+      case 1: // Hi-Res
+         clip[0].xend= (T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF);
+         break;
+      case 2: // Exclusive Normal
+         clip[0].xend= (T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x1FF);
+         break;
+      case 3: // Exclusive Hi-Res
+         clip[0].xend= ((T1ReadWord(Vdp2Ram, linewnd0addr[0]) & 0x3FF) >> 1);
+         break;
+   }
+#endif
          linewnd0addr[0]+=2;
       }
       if (islinewindow & 0x2)
       {
          // Window 1
+#ifndef GEKKO
          clip[1].xstart = (T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF) >> 1; // fix me
+#else
+   switch (TVMD)
+   {
+      case 0: // Normal
+         clip[1].xstart = ((T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF) >> 1) & 0x1FF;
+         break;
+      case 1: // Hi-Res
+         clip[1].xstart = (T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF);
+         break;
+      case 2: // Exclusive Normal
+         clip[1].xstart = (T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x1FF);
+         break;
+      case 3: // Exclusive Hi-Res
+         clip[1].xstart = ((T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF) >> 1);
+         break;
+   }
+#endif
          linewnd1addr[0]+=2;
+#ifndef GEKKO
          clip[1].xend = (T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF) >> 1; // fix me
+#else
+   switch (TVMD)
+   {
+      case 0: // Normal
+         clip[1].xend= ((T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF) >> 1) & 0x1FF;
+         break;
+      case 1: // Hi-Res
+         clip[1].xend= (T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF);
+         break;
+      case 2: // Exclusive Normal
+         clip[1].xend= (T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x1FF);
+         break;
+      case 3: // Exclusive Hi-Res
+         clip[1].xend= ((T1ReadWord(Vdp2Ram, linewnd1addr[0]) & 0x3FF) >> 1);
+         break;
+   }
+#endif
          linewnd1addr[0]+=2;
       }
    }
